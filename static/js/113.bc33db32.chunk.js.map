{"version":3,"file":"static/js/113.bc33db32.chunk.js","mappings":"oRAEMA,EAAU,gCACVC,EAAU,mCAEHC,EAAgB,WAC3B,OAAOC,EAAAA,EAAAA,IAAA,UACFH,EADE,oCACiCC,EADjC,mBAGR,EACYG,EAAiB,SAAAC,GAC5B,OAAOF,EAAAA,EAAAA,IAAA,YAEPH,EAFO,iBAESK,EAFT,oBAEuBJ,EAFvB,mBAIR,EACYK,EAAmB,SAAAD,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iBACcK,EADd,4BACoCJ,EADpC,mBAGR,EACYM,EAAmB,SAAAF,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iBACcK,EADd,4BACoCJ,EADpC,mBAGR,EACYO,EAAmB,SAAAC,GAC9B,OAAON,EAAAA,EAAAA,IAAA,YACPH,EADO,8BACsBS,EADtB,oBACyCR,EADzC,mBAER,C,6ICoCD,UA5DqB,WAAO,IAAD,IACzB,GAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACQX,GAAOY,EAAAA,EAAAA,MAAPZ,GACFa,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,OACvCC,EAAS,yCAAqCZ,EAAMa,aAe1D,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BrB,EAAAA,EAAAA,IAAeC,GAF1C,OAEUqB,EAFV,OAGId,EAASc,EAASC,MAClBX,EAAUU,EAASC,KAAKZ,QACxBD,EAAQY,EAASC,KAAKC,aAAaC,MAAM,KAAK,IALlD,gDAOIC,QAAQC,IAAI,KAAMC,SAPtB,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAAC5B,KAEF,UAAC6B,EAAD,YACE,SAAC,EAAAC,KAAD,CAAMC,GAAIhB,EAAV,sBACA,UAACiB,EAAD,YACE,0BACE,gBAAKC,IAAG,UAAKf,GAAagB,IAAG,UAAK5B,EAAM6B,YAE1C,4BACE,UAACC,EAAD,WACG9B,EAAM6B,MADT,IACiB3B,EADjB,QAGA,UAAC6B,EAAD,0BAAwB/B,EAAMgC,iBAC9B,SAACC,EAAD,wBACA,SAACF,EAAD,UAAY/B,EAAMkC,YAClB,SAACD,EAAD,sBACA,uBAAI7B,EAAO+B,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAAW,WAGxD,4BACE,mDACA,2BACE,yBACE,SAAC,EAAAd,KAAD,CAAMC,GAAG,OAAOf,MAAOH,EAASG,MAAhC,qBAIF,yBACE,SAAC,EAAAc,KAAD,CAAMC,GAAG,UAAUf,MAAOH,EAASG,MAAnC,8BAMN,SAAC,KAAD,MAGL,EAGD,IAAMoB,EAAaS,EAAAA,GAAAA,GAAH,4CAGVN,EAAmBM,EAAAA,GAAAA,GAAH,4CAGhBR,EAAYQ,EAAAA,GAAAA,EAAH,4CAGThB,EAAiBgB,EAAAA,GAAAA,IAAH,+DAKdb,EAAiBa,EAAAA,GAAAA,IAAH,6H","sources":["Api/Api.jsx","components/Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '36c5240e9c1d76f3ef284d0cb20db05d';\n\nexport const fetchTrending = () => {\n  return axios.get(\n    `${baseURL}trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchMovieById = id => {\n  return axios.get(\n    `\n${baseURL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchCreditsById = id => {\n  return axios.get(\n    `${baseURL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchReviewsById = id => {\n  return axios.get(\n    `${baseURL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchMovieByName = keyword => {\n  return axios.get(`\n${baseURL}search/movie?query=${keyword}&api_key=${API_KEY}&language=en-US`);\n};\n","import { fetchMovieById } from 'Api/Api';\nimport { useState, useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [date, setDate] = useState('');\n  const [genres, setGenres] = useState([]);\n  const { id } = useParams();\n  const location = useLocation();\n  // console.log(location);\n  const backLinkHref = location.state?.from ?? '/333';\n  const PosterUrl = `https://image.tmdb.org/t/p/w200${movie.poster_path}`;\n\n  useEffect(() => {\n    async function getMovieById() {\n      try {\n        const response = await fetchMovieById(id);\n        setMovie(response.data);\n        setGenres(response.data.genres);\n        setDate(response.data.release_date.split('-')[0]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getMovieById();\n  }, [id]);\n  return (\n    <StyleContainer>\n      <Link to={backLinkHref}>Go back</Link>\n      <StyleMovieItem>\n        <div>\n          <img src={`${PosterUrl}`} alt={`${movie.title}`} />\n        </div>\n        <div>\n          <StyleTitle>\n            {movie.title}({date})\n          </StyleTitle>\n          <StyleText>User Score: {movie.vote_average}</StyleText>\n          <StyleSecondTitle>Overview</StyleSecondTitle>\n          <StyleText>{movie.overview}</StyleText>\n          <StyleSecondTitle>Genres</StyleSecondTitle>\n          <p>{genres.map(genre => genre.name).join(', ')}</p>{' '}\n        </div>\n      </StyleMovieItem>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </StyleContainer>\n  );\n};\nexport default MovieDetails;\n\nconst StyleTitle = styled.h1`\n  font-size: 22px;\n`;\nconst StyleSecondTitle = styled.h2`\n  font-size: 18px;\n`;\nconst StyleText = styled.p`\n  font-size: 12px;\n`;\nconst StyleContainer = styled.div`\n  max-width: 1200px;\n  margin: 40px;\n`;\n\nconst StyleMovieItem = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  list-style: none;\n  margin-top: 20px;\n`;\n"],"names":["baseURL","API_KEY","fetchTrending","axios","fetchMovieById","id","fetchCreditsById","fetchReviewsById","fetchMovieByName","keyword","useState","movie","setMovie","date","setDate","genres","setGenres","useParams","location","useLocation","backLinkHref","state","from","PosterUrl","poster_path","useEffect","response","data","release_date","split","console","log","message","getMovieById","StyleContainer","Link","to","StyleMovieItem","src","alt","title","StyleTitle","StyleText","vote_average","StyleSecondTitle","overview","map","genre","name","join","styled"],"sourceRoot":""}