{"version":3,"file":"static/js/740.aa0ab44c.chunk.js","mappings":"oRAEMA,EAAU,gCACVC,EAAU,mCAEHC,EAAgB,WAC3B,OAAOC,EAAAA,EAAAA,IAAA,UACFH,EADE,oCACiCC,EADjC,mBAGR,EACYG,EAAiB,SAAAC,GAC5B,OAAOF,EAAAA,EAAAA,IAAA,YAEPH,EAFO,iBAESK,EAFT,oBAEuBJ,EAFvB,mBAIR,EACYK,EAAmB,SAAAD,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iBACcK,EADd,4BACoCJ,EADpC,mBAGR,EACYM,EAAmB,SAAAF,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iBACcK,EADd,4BACoCJ,EADpC,mBAGR,EACYO,EAAmB,SAAAC,GAC9B,OAAON,EAAAA,EAAAA,IAAA,YACPH,EADO,8BACsBS,EADtB,oBACyCR,EADzC,mBAER,C,iHC+BD,UAvDe,WACb,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACMC,EAAcJ,EAAaK,IAAI,eAC/BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAE2Bd,EAAAA,EAAAA,IAAiBU,GAF5C,OAEUK,EAFV,OAGIX,EAAUW,EAASC,KAAKC,SAH5B,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,0DAFc,sBACTV,GADS,mCAUdW,EACD,GAAE,CAACX,IAYJ,OACE,iCACE,kBAAMY,SAZW,SAAAC,GACnBA,EAAEC,iBACFjB,EAAgB,CAAEG,YAAaa,EAAEE,OAAOC,SAAShB,YAAYiB,QAC7DJ,EAAEE,OAAOG,QACTnB,GAAgBD,EACjB,EAOG,WACE,kBAAOqB,KAAK,OAAOC,KAAK,cAAcC,SAPxB,SAAAR,GAClB,IAAMI,EAAQJ,EAAEE,OAAOE,MAAMK,OAC7BvB,GAAgBkB,EACjB,KAKK,mBAAQE,KAAK,SAASI,SAAUzB,EAAhC,uBAIDL,EAAO+B,QACN,wBACG/B,EAAOgC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,UAAKF,EAAMvC,IAAM0C,MAAO,CAAEC,KAAM5B,GAAxC,SACGwB,EAAMK,SAFFL,EAAMvC,GADA,OASnB,+CAIP,C","sources":["Api/Api.jsx","Pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '36c5240e9c1d76f3ef284d0cb20db05d';\n\nexport const fetchTrending = () => {\n  return axios.get(\n    `${baseURL}trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchMovieById = id => {\n  return axios.get(\n    `\n${baseURL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchCreditsById = id => {\n  return axios.get(\n    `${baseURL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchReviewsById = id => {\n  return axios.get(\n    `${baseURL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchMovieByName = keyword => {\n  return axios.get(`\n${baseURL}search/movie?query=${keyword}&api_key=${API_KEY}&language=en-US`);\n};\n","import { fetchMovieByName } from 'Api/Api';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [btnDisabled, setBtnDisabled] = useState(true);\n  const searchQuery = searchParams.get('searchQuery');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    async function getMovieByName() {\n      try {\n        const response = await fetchMovieByName(searchQuery);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getMovieByName();\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ searchQuery: e.target.elements.searchQuery.value });\n    e.target.reset();\n    setBtnDisabled(!btnDisabled);\n  };\n  const handleInput = e => {\n    const value = e.target.value.trim();\n    setBtnDisabled(!value);\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"searchQuery\" onChange={handleInput} />\n        <button type=\"submit\" disabled={btnDisabled}>\n          Search\n        </button>\n      </form>\n      {movies.length ? (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Enter movie name </p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["baseURL","API_KEY","fetchTrending","axios","fetchMovieById","id","fetchCreditsById","fetchReviewsById","fetchMovieByName","keyword","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","btnDisabled","setBtnDisabled","searchQuery","get","location","useLocation","useEffect","response","data","results","console","log","message","getMovieByName","onSubmit","e","preventDefault","target","elements","value","reset","type","name","onChange","trim","disabled","length","map","movie","Link","to","state","from","title"],"sourceRoot":""}