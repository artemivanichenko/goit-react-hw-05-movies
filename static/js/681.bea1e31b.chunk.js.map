{"version":3,"file":"static/js/681.bea1e31b.chunk.js","mappings":"oRAEMA,EAAU,gCACVC,EAAU,mCAEHC,EAAgB,WAC3B,OAAOC,EAAAA,EAAAA,IAAA,UACFH,EADE,oCACiCC,EADjC,mBAGR,EACYG,EAAiB,SAAAC,GAC5B,OAAOF,EAAAA,EAAAA,IAAA,YAEPH,EAFO,iBAESK,EAFT,oBAEuBJ,EAFvB,mBAIR,EACYK,EAAmB,SAAAD,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iBACcK,EADd,4BACoCJ,EADpC,mBAGR,EACYM,EAAmB,SAAAF,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iBACcK,EADd,4BACoCJ,EADpC,mBAGR,EACYO,EAAmB,SAAAC,GAC9B,OAAON,EAAAA,EAAAA,IAAA,YACPH,EADO,8BACsBS,EADtB,oBACyCR,EADzC,mBAER,C,+HCQD,UA/BgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQP,GAAOQ,EAAAA,EAAAA,MAAPR,GAaR,OAZAS,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BP,EAAAA,EAAAA,IAAiBF,GAF5C,OAEUU,EAFV,OAGIH,EAAWG,EAASC,KAAKC,SAH7B,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAAChB,IAEGM,EAAQW,QACb,+BACE,SAACC,EAAD,UACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,SAACC,EAAD,UAAkBF,EAAOG,YAFlBH,EAAOpB,GADC,SASvB,kEAEH,EAID,IAAMkB,EAAkBM,EAAAA,GAAAA,GAAH,qLAUfF,EAAkBE,EAAAA,GAAAA,EAAH,2C","sources":["Api/Api.jsx","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '36c5240e9c1d76f3ef284d0cb20db05d';\n\nexport const fetchTrending = () => {\n  return axios.get(\n    `${baseURL}trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchMovieById = id => {\n  return axios.get(\n    `\n${baseURL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchCreditsById = id => {\n  return axios.get(\n    `${baseURL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchReviewsById = id => {\n  return axios.get(\n    `${baseURL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchMovieByName = keyword => {\n  return axios.get(`\n${baseURL}search/movie?query=${keyword}&api_key=${API_KEY}&language=en-US`);\n};\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from '../Api/Api';\nimport styled from 'styled-components';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    async function getReviewsById() {\n      try {\n        const response = await fetchReviewsById(id);\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getReviewsById();\n  }, [id]);\n\n  return reviews.length ? (\n    <>\n      <StyleReviewItem>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>Author: {review.author}</h3>\n            <StyleReviewInfo>{review.content}</StyleReviewInfo>\n          </li>\n        ))}\n      </StyleReviewItem>\n    </>\n  ) : (\n    <p>we don't have any review for this movie</p>\n  );\n};\n\nexport default Reviews;\n\nconst StyleReviewItem = styled.ul`\n  display: flex;\n  justify-content: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  margin-top: 20px;\n`;\n\nconst StyleReviewInfo = styled.p`\n  font-size: 14px;\n`;\n"],"names":["baseURL","API_KEY","fetchTrending","axios","fetchMovieById","id","fetchCreditsById","fetchReviewsById","fetchMovieByName","keyword","useState","reviews","setReviews","useParams","useEffect","response","data","results","console","log","message","getReviewsById","length","StyleReviewItem","map","review","author","StyleReviewInfo","content","styled"],"sourceRoot":""}