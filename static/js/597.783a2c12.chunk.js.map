{"version":3,"file":"static/js/597.783a2c12.chunk.js","mappings":"oRAEMA,EAAU,gCACVC,EAAU,mCAEHC,EAAgB,WAC3B,OAAOC,EAAAA,EAAAA,IAAA,UACFH,EADE,oCACiCC,EADjC,mBAGR,EACYG,EAAiB,SAAAC,GAC5B,OAAOF,EAAAA,EAAAA,IAAA,YAEPH,EAFO,iBAESK,EAFT,oBAEuBJ,EAFvB,mBAIR,EACYK,EAAmB,SAAAD,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iBACcK,EADd,4BACoCJ,EADpC,mBAGR,EACYM,EAAmB,SAAAF,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iBACcK,EADd,4BACoCJ,EADpC,mBAGR,EACYO,EAAmB,SAAAC,GAC9B,OAAON,EAAAA,EAAAA,IAAA,YACPH,EADO,8BACsBS,EADtB,oBACyCR,EADzC,mBAER,C,iICoBD,UA3Ca,WACX,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQP,GAAOQ,EAAAA,EAAAA,MAAPR,GAcR,OAbAS,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BR,EAAAA,EAAAA,IAAiBD,GAF5C,OAEUU,EAFV,OAGIH,EAAQG,EAASC,KAAKL,MAH1B,gDAKIM,QAAQC,IAAI,KAAMC,SALtB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACf,IAGGM,EAAKU,QACV,+BACE,SAACC,EAAD,UACGX,EAAKY,KAAI,SAAAC,GAAO,OACf,0BACGA,EAAQC,cACP,SAACC,EAAD,CACEC,IAAG,0CAAqCH,EAAQC,cAChDG,IAAKJ,EAAQK,QAGf,SAACH,EAAD,CACEC,IAAI,uCACJC,IAAI,SACJE,MAAM,SAGV,SAACC,EAAD,UAAmBP,EAAQK,QAC3B,UAACE,EAAD,yBAA8BP,EAAQQ,eAd/BR,EAAQS,QADF,SAqBrB,uEAEH,EAGD,IAAMX,EAAmBY,EAAAA,GAAAA,GAAH,uLAUhBR,EAAoBQ,EAAAA,GAAAA,IAAH,gIAOjBH,EAAmBG,EAAAA,GAAAA,EAAH,2C","sources":["Api/Api.jsx","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '36c5240e9c1d76f3ef284d0cb20db05d';\n\nexport const fetchTrending = () => {\n  return axios.get(\n    `${baseURL}trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchMovieById = id => {\n  return axios.get(\n    `\n${baseURL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchCreditsById = id => {\n  return axios.get(\n    `${baseURL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchReviewsById = id => {\n  return axios.get(\n    `${baseURL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const fetchMovieByName = keyword => {\n  return axios.get(`\n${baseURL}search/movie?query=${keyword}&api_key=${API_KEY}&language=en-US`);\n};\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCreditsById } from '../Api/Api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    async function getCreditsById() {\n      try {\n        const response = await fetchCreditsById(id);\n        setCast(response.data.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getCreditsById();\n  }, [id]);\n\n  // console.log(cast);\n  return cast.length ? (\n    <>\n      <StyleProfileItem>\n        {cast.map(profile => (\n          <li key={profile.cast_id}>\n            {profile.profile_path ? (\n              <StyleProfileImage\n                src={`https://image.tmdb.org/t/p/w200/${profile.profile_path}`}\n                alt={profile.name}\n              />\n            ) : (\n              <StyleProfileImage\n                src=\"http://www.gravatar.com/avatar/?d=mp\"\n                alt=\"noname\"\n                width=\"300\"\n              />\n            )}\n            <StyleProfileInfo>{profile.name}</StyleProfileInfo>\n            <StyleProfileInfo>Character: {profile.character}</StyleProfileInfo>\n          </li>\n        ))}\n      </StyleProfileItem>\n    </>\n  ) : (\n    <p>we don't have any information for this movie</p>\n  );\n};\nexport default Cast;\n\nconst StyleProfileItem = styled.ul`\n  display: flex;\n  justify-content: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  gap: 20px;\n  list-style: none;\n  margin-top: 20px;\n`;\nconst StyleProfileImage = styled.img`\n  width: 80px;\n  height: 120px;\n  object-fit: cover;\n  position: relative;\n  /* color: #ffffff; */\n`;\nconst StyleProfileInfo = styled.p`\n  font-size: 14px;\n`;\n"],"names":["baseURL","API_KEY","fetchTrending","axios","fetchMovieById","id","fetchCreditsById","fetchReviewsById","fetchMovieByName","keyword","useState","cast","setCast","useParams","useEffect","response","data","console","log","message","getCreditsById","length","StyleProfileItem","map","profile","profile_path","StyleProfileImage","src","alt","name","width","StyleProfileInfo","character","cast_id","styled"],"sourceRoot":""}